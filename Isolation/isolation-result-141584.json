{
    "critiques": {
        "680": {
            "rubric_items": {
                "5510": {
                    "autograded": true,
                    "result": "failed",
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 7. Test functionality of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nAssertionError: Failed to cut off search -- expanded too many nodes. (i.e., your agent did not prune at this node, but a correct alpha beta search did prune at this node when following the same expansion order that your agent followed.)\nAlpha: 4.0\nBeta: 1.0\nGame tree evaluation order:\n[(3, 8), (6, 5), (7, 8)]\n[(0, 5)]\n\nNodes are shown with each layer sorted in the order the nodes were expanded\nduring search.  All nodes in each successive layer are children of the\nfurthest-right node in the parent layer above it.\n\nTest Case Details:\n------------------\nHeuristic: open_move_score\nDepth limit: 2\nInitial Board State:\n     0   1   2   3   4   5   6   7   8\n0  |   |   |   |   |   |   |   |   |   | \n1  |   |   |   |   |   |   |   |   |   | \n2  |   |   |   | - | - | - | 2 |   |   | \n3  |   |   | - | - | - | - | - |   |   | \n4  |   |   | - | - | - | - | - | - |   | \n5  |   |   | - | - |   |   | - | 1 |   | \n6  |   |   |   | - | - |   | - |   |   | \n7  |   |   |   |   |   | - | - |   |   | \n8  |   |   |   |   |   |   |   |   |   | \n\ngame._board_state:\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 68]\n\n\n\nFailed Test: 9. Test iterative deepening in AlphaBetaPlayer.get_move()\n----------------------------------------------------------------------\nAssertionError: False is not true : Your agent did not call the search function self.alphabeta() the expected number of times.  Iterative deepening should call the search function with sequential values until SearchTimeout is raised. SearchTimeout was set to be raised after 24 moves, and your agent called the search function 2 times.\n\n\nFailed Test: 11. Test output interface of custom_score()\n----------------------------------------------------------------------\nAssertionError: -6 is not an instance of <class 'float'> : The custom_score() function should return a floating point value, but your function returned <class 'int'>\n\n\nFailed Test: 12. Test output interface of custom_score_2()\n----------------------------------------------------------------------\nAssertionError: -2 is not an instance of <class 'float'> : The custom_score_2() function should return a floating point value, but your function returned <class 'int'>\n\n\nFailed Test: 13. Test output interface of custom_score_3()\n----------------------------------------------------------------------\nAssertionError: 2 is not an instance of <class 'float'> : The custom_score_3() function should return a floating point value, but your function returned <class 'int'>\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n1. Test output interface of MinimaxPlayer.minimax():                   .\n2. Test functionality of MinimaxPlayer.minimax():                      .\n3. Test that minimax() raises SearchTimeout when the timer expires:    .\n4. Test that MinimaxPlayer successfully plays a full game:             .\n5. Test interface of AlphaBetaPlayer.alphabeta():                      .\n6. Test the interface of AlphaBetaPlayer.get_move():                   .\n7. Test functionality of AlphaBetaPlayer.alphabeta():                  F\n8. Test that alphabeta() raises SearchTimeout when the timer expires:  .\n9. Test iterative deepening in AlphaBetaPlayer.get_move():             F\n10. Test that AlphaBetaPlayer successfully plays a full game:          .\n11. Test output interface of custom_score():                           F\n12. Test output interface of custom_score_2():                         F\n13. Test output interface of custom_score_3():                         F\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                },
                "7303": {
                    "autograded": true,
                    "result": "failed",
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 14. Submission includes heuristic_analysis.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\n\n\nFailed Test: 15. Submission includes research_review.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named research_review.pdf for review.\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n14. Submission includes heuristic_analysis.pdf:                        F\n15. Submission includes research_review.pdf:                           F\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                }
            }
        }
    }
}